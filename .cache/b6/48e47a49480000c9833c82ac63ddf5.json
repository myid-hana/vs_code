{"id":"example.js","dependencies":[{"name":"/Users/parkhana/Desktop/vs_code/package.json","includedInParent":true,"mtime":1603729524716}],"generated":{"js":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//1. 선언적 방식\nvar A = function A() {\n  _classCallCheck(this, A);\n};\n\nconsole.log(new A()); //class 표현식을 변수에 할당 \n\nvar B = function B() {\n  _classCallCheck(this, B);\n};\n\nconsole.log(new B()); //선언적 방식이지만 호이스팅은 일어나지 않는다. \n//2. constructor"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"example.js","original":{"line":1,"column":0}},{"name":"A","generated":{"line":4,"column":4},"source":"example.js","original":{"line":2,"column":6}},{"name":"console","generated":{"line":8,"column":0},"source":"example.js","original":{"line":4,"column":0}},{"generated":{"line":8,"column":7},"source":"example.js","original":{"line":4,"column":7}},{"name":"log","generated":{"line":8,"column":8},"source":"example.js","original":{"line":4,"column":8}},{"generated":{"line":8,"column":11},"source":"example.js","original":{"line":4,"column":0}},{"generated":{"line":8,"column":12},"source":"example.js","original":{"line":4,"column":12}},{"name":"A","generated":{"line":8,"column":16},"source":"example.js","original":{"line":4,"column":16}},{"generated":{"line":8,"column":17},"source":"example.js","original":{"line":4,"column":12}},{"generated":{"line":8,"column":19},"source":"example.js","original":{"line":4,"column":0}},{"generated":{"line":8,"column":22},"source":"example.js","original":{"line":6,"column":0}},{"generated":{"line":10,"column":0},"source":"example.js","original":{"line":7,"column":0}},{"name":"B","generated":{"line":10,"column":4},"source":"example.js","original":{"line":7,"column":6}},{"generated":{"line":10,"column":5},"source":"example.js","original":{"line":7,"column":7}},{"generated":{"line":11,"column":0},"source":"example.js","original":{"line":7,"column":7}},{"generated":{"line":12,"column":0},"source":"example.js","original":{"line":7,"column":7}},{"generated":{"line":12,"column":1},"source":"example.js","original":{"line":7,"column":0}},{"name":"console","generated":{"line":14,"column":0},"source":"example.js","original":{"line":9,"column":0}},{"generated":{"line":14,"column":7},"source":"example.js","original":{"line":9,"column":7}},{"name":"log","generated":{"line":14,"column":8},"source":"example.js","original":{"line":9,"column":8}},{"generated":{"line":14,"column":11},"source":"example.js","original":{"line":9,"column":0}},{"generated":{"line":14,"column":12},"source":"example.js","original":{"line":9,"column":12}},{"name":"B","generated":{"line":14,"column":16},"source":"example.js","original":{"line":9,"column":16}},{"generated":{"line":14,"column":17},"source":"example.js","original":{"line":9,"column":12}},{"generated":{"line":14,"column":19},"source":"example.js","original":{"line":9,"column":0}},{"generated":{"line":14,"column":22},"source":"example.js","original":{"line":10,"column":0}},{"generated":{"line":15,"column":0},"source":"example.js","original":{"line":12,"column":0}}],"sources":{"example.js":"//1. 선언적 방식\nclass A {}\n\nconsole.log(new A());\n\n//class 표현식을 변수에 할당 \nconst B = class {};\n\nconsole.log(new B());\n//선언적 방식이지만 호이스팅은 일어나지 않는다. \n\n//2. constructor  "},"lineCount":null}},"error":null,"hash":"71b496e51b55b1f20d7a8c8c1bcff3dd","cacheData":{"env":{}}}